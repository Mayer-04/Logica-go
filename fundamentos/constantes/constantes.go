package main

import "fmt"

// * IMPORTANTE: Las constantes no necesitan ser usadas en su totalidad para compilar el c칩digo.
// * Declarar una constante sin usarla no provocar치 un mensaje de error.
// * Las constantes se deben declarar y asignar inmediatamente un valor.
// * Es recomendable declararlas a nivel de paquete cuando se necesita un valor constante en m칰ltiples lugares.

// Constante exportable a nivel de paquete
const Pi = 3.1416

// Constante no exportable, solo visible dentro del paquete
const version = "1.0.0"

// Constante a nivel de paquete, no exportable
const animal = "游냞"

// * Uso de iota para la creaci칩n de secuencias de valores incrementales en declaraciones const
// * iota es una caracter칤stica incorporada en Go que comienza en 0 y se incrementa autom치ticamente.
// * Ideal para enumeraciones o listas secuenciales.
const (
	Lunes     = iota // Lunes == 0
	Martes           // Martes == 1 (iota se incrementa autom치ticamente)
	Mi칠rcoles        // Mi칠rcoles == 2 (iota se incrementa autom치ticamente)
	Jueves           // Jueves == 3 (iota se incrementa autom치ticamente)
	Viernes          // Viernes == 4 (iota se incrementa autom치ticamente)
	S치bado           // S치bado == 5 (iota se incrementa autom치ticamente)
	Domingo          // Domingo == 6 (iota se incrementa autom치ticamente)
)

func main() {
	// Constantes
	// * Las constantes deben declararse con la palabra clave 'const' seguida del nombre y tipo de la constante.
	// * No podemos utilizar el operador de asignaci칩n corta (:=) para definir una constante.
	const gender string = "Masculino"
	fmt.Println("g칠nero:", gender)

	// Agrupaci칩n de constantes
	// * Es posible agrupar constantes relacionadas en un solo bloque.
	const (
		fruit1 = "游꼝"
		fruit2 = "游꼟"
	)

	fmt.Println(fruit1, fruit2)

	// Imprimir constantes definidas a nivel de paquete
	fmt.Println("animal:", animal)
	fmt.Println("versi칩n:", version)
}
